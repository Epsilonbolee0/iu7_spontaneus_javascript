	Здравствуйте, дамы и господа. Меня зовут Никита, 
и сегодня я представляю команду The Mighty Jet.
Я бы хотел представить вам проект "Растекание воды по ландшафту"
<==>
	Сегодня я буду вести речь о таком занимательном процессе, как моделирование поведения воды.
Смоделировать воду - задача далеко не из лёгких. Для получения адекватного результата
приходится упрощать модель и пренебрегать многими параметрами.
Мы хотим донести наши мысли о том, какой физический и математический арсенал может
пригодиться в задаче моделирования ньютоновской несжимаемой жидкости.
Более того, мы расскажем, как подготовить для модели неограниченное количество 
гладких ландшафтов, и всё это - в доходивом и доступном формате.
<==>
	Поговорим о том, зачем это вообще всё нужно. Многие говорят, что методы 
преподавания физики не всегда способны в достаточной мере заинтересовать слушателя. 
Иногда шаблонность материала лабораторных способна оттолкнуть ученика, что негативно может
повлиять на усвоением им материала.
	Студента нужно интересовать. Студенту нужно давать свободу действий. Методички, по
нашему опыту, не всегда справляются с этой задачей. С другой стороны, 
даже многие интересные и познавательные лабораторные работы ограничены 
помещением проведения, и выполнить их удаётся далеко не всегда.

<==>
	В условиях общей изоляции недостатки такой системы лабораторных встали особенно резко.
Именно сейчас слово "дистанционность" приобрело особый вес. Нам необходима база, на основе
которой студенты будут способы обособленно и самостоятельно выполнять лабораторные. Такой
мобильности можно достичь, используя программные средства.
	Но мы не упомянули ещё одной проблемы дистанта - повсеместное списывание. Студент
очень легко отвлекается от работы в домашней обстановке, и более заинтересован в сдаче 
работе работы, чем в получении соответстсвующих знаний. Ужесточение мер приёма работ лишь
усугубляет ситуацию, подрывая заинтересованность студента.
	Значит, стоит идти с другой стороны. Преподносить лабораторную так, чтобы студент
был заинтересован сделать её. Чем больше интерактивности и свободы мы способны дать, тем
больше шанс заинтересовать студента. Привести хоть пример всем известной игры Minecraft -
не ограниченные практически никакими правилами, люди оказались способны строить модели
простейших компьютеров и выстраивать целые города, используя для этого простейшую базу.
Они получили знания добровольно, и были заинтересованы в этом. Без дедлайнов. Без оценок.
Разве не чудо?
	Эти мысли и привели нас к созданию The Mighty Jet. 
Мы стремились достичь этих двух благ - дистанционности и интерактивности. 
<==>
	Перейдём к техническому аспекту моделирования. Начнём с обещанной генерации ланшафтов.
Для создания гибкой и интерактивной модели возможность получить процедурно сгенерированный
ланшафт очень полезна. К нему, при этом, возникают некоторые требования - он должен быть
гладким и реалистичным. И при всём этом ещё и случайным. Как этого добиться?
	На помощь приходят шумы Перлина. На экране вы можете видеть некоторые из применений
шумов - они часто используются для созданий карт высотности или влажности. Изначально их
вообще использовали для процедурной генерации текстуры дыма.
<==>
	В нашей программе мы использовали двумерный шум Перлина, но концептуально его 
легче объяснить на примере одномерных шумов Перлина.

1. Возьмём целые точки. Для каждой выберем тангенс наклона - от -1 до 1.
2. Если мы продлим линии для каждой точки, результат не выйдет гладким. Очевидный 
вариант для этого - усреднение значений. Однако, как можно заметить, в окрестности точек 
кривая получается не очень гладкой. Необходимо увеличить вклад линии, к к точке появления
которой мы ближе. Напрашивается линейная интерполяция.
3. Мы получаем всё ещё не идеал. Интерполируем снова!
4. Всё же, для удобства применим кривые Безье!
5. Итак, полученный результат уже не может не радовать. Однако для большей случайности
значений введём понятие октав. На самом деле, чистый шум Перлина не так широко используется.
Добавим ещё один шум с вдвое большим разрешением и вдвое меньшей амплитудой, и прибавим
к исходному. Готово, вы великолепны.
<==>
	С шумами всё предельно ясно. А что с водой? Мы решили использовать для нашей модели
уравнения Навье-Стокса. Решить мы их, конечно, не в силах, но никто не отменял численное 
решение! Если вкратце, уравнения описывают движение вязкой ньютоновской жидкости. Про реализа
цию поговорим позже.
<==>
	Мы определились с физическим арсеналом. А как можно описать процесс перемещения воды?
На помощь приходят графы. Думаю, тут толком и нечего говорить. Графовые структуры удобны для
описания связей между элементами, и клетки матрицы очень удобно связать именно с помощью графа
	Список смежности выгоден, потому что граф не является очень плотным (не более 8
связей для каждого из элементов). Так мы и решили хранить данные об ускорениях.
<==>
	Итак, на этом слайде вы можете хорошо рассмотреть каркас интерфейса нашей программы.
Для реализации был использован фреймворк Qt. Свободное пространство использовано для самой
модели, с которой можно взаимодейтствовать вращением, масштабированием и т.д. В левом нижнем
углу располагается вид сверху для большей наглядности. Имеется возможность работать 
одновременно с несколькими объектами.
<==>
	А теперь немного поговорим про общую схему взаимодействия модулей программы.
Генерация ландшафта была реализована с использованием шумов Перлина.
Для хранения данных о ландшафте используется матрица высот. 
Программа преобразует матрицу в графовую структуру, описанную в виде списков смежности. 
Далее по данным о ландшафте составляется карта ускорений воды по трем координатным осям 
на переходах между элементами матрицы. На следующем шаге моделируются 
результирующие скорости каждого из "квантов" воды, расположенных на клетках, 
и обрабатываются переходы с использованием уравнения Навье-Стокса. 
Результирующие данные возвращаются в виде форматированного файла, 
содержащего моменты времени и данные о количестве и в
ектора передвижения каждого из "квантов" воды. 
Дальнейшей обработкой изображения производится в элементе QtQuick3D, 
в который загружается текстурированную модель, полученную в Blender
из ранее описанного файла. 

<==>
	Пару слов о Blender. Его использование выгодно по причине удобного API и 
поддержки скриптов на языке Python. Более того, программа позволяет легко добавить
текстуры и встраивается в QtQuick3D
<==>
	Напоследок о перспективах. Мы стремимся создать платформу, которая будет интересна
студенту. Платформу, которая дополнит и расширит занятия по физике у студента. Платформу,
которая поможет в условиях дистанта. Такие и перспективы. Спасибо за внимание.
<==>
Если у вас есть вопросы, я с удовольствием на них отвечу.


